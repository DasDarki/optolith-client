// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function $less$$great(f, xs) {
  if (xs) {
    return /* :: */[
            Curry._1(f, xs[0]),
            $less$$great(f, xs[1])
          ];
  } else {
    return /* [] */0;
  }
}

var Functor = {
  $less$$great: $less$$great
};

function foldr(f, initial, xs) {
  if (xs) {
    return Curry._2(f, xs[0], foldr(f, initial, xs[1]));
  } else {
    return initial;
  }
}

function foldr1(f, xs) {
  if (xs) {
    return foldr(f, xs[0], xs[1]);
  } else {
    return Pervasives.invalid_arg("Cannot apply foldr1 to an empty list.");
  }
}

function foldl(f, _initial, _xs) {
  while(true) {
    var xs = _xs;
    var initial = _initial;
    if (xs) {
      _xs = xs[1];
      _initial = Curry._2(f, initial, xs[0]);
      continue ;
    } else {
      return initial;
    }
  };
}

function foldl1(f, xs) {
  if (xs) {
    return foldl(f, xs[0], xs[1]);
  } else {
    return Pervasives.invalid_arg("Cannot apply foldl1 to an empty list.");
  }
}

var Foldable = {
  foldr: foldr,
  foldr1: foldr1,
  foldl: foldl,
  foldl1: foldl1
};

var map = $less$$great;

exports.Functor = Functor;
exports.Foldable = Foldable;
exports.map = map;
/* No side effect */
