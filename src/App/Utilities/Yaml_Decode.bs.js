// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Json_decode from "@glennsl/bs-json/src/Json_decode.bs.js";
import * as Ids$OptolithClient from "../Constants/Ids.bs.js";
import * as Ley_List$OptolithClient from "../../Data/Ley_List.bs.js";
import * as Ley_IntMap$OptolithClient from "../../Data/Ley_IntMap.bs.js";
import * as Static_Item$OptolithClient from "../Models/Static_Item.bs.js";
import * as Static_Pact$OptolithClient from "../Models/Static_Pact.bs.js";
import * as Static_Race$OptolithClient from "../Models/Static_Race.bs.js";
import * as Static_Curse$OptolithClient from "../Models/Static_Curse.bs.js";
import * as Static_Skill$OptolithClient from "../Models/Static_Skill.bs.js";
import * as Static_Spell$OptolithClient from "../Models/Static_Spell.bs.js";
import * as Static_State$OptolithClient from "../Models/Static_State.bs.js";
import * as Static_Cantrip$OptolithClient from "../Models/Static_Cantrip.bs.js";
import * as Static_Culture$OptolithClient from "../Models/Static_Culture.bs.js";
import * as Static_Blessing$OptolithClient from "../Models/Static_Blessing.bs.js";
import * as Static_Messages$OptolithClient from "../Models/Static_Messages.bs.js";
import * as Static_Advantage$OptolithClient from "../Models/Static_Advantage.bs.js";
import * as Static_Attribute$OptolithClient from "../Models/Static_Attribute.bs.js";
import * as Static_Condition$OptolithClient from "../Models/Static_Condition.bs.js";
import * as Static_FocusRule$OptolithClient from "../Models/Static_FocusRule.bs.js";
import * as Static_Profession$OptolithClient from "../Models/Static_Profession.bs.js";
import * as Static_RogueSpell$OptolithClient from "../Models/Static_RogueSpell.bs.js";
import * as Static_GeodeRitual$OptolithClient from "../Models/Static_GeodeRitual.bs.js";
import * as Static_Publication$OptolithClient from "../Models/Static_Publication.bs.js";
import * as Static_AnimistForce$OptolithClient from "../Models/Static_AnimistForce.bs.js";
import * as Static_Disadvantage$OptolithClient from "../Models/Static_Disadvantage.bs.js";
import * as Static_MagicalDance$OptolithClient from "../Models/Static_MagicalDance.bs.js";
import * as Static_OptionalRule$OptolithClient from "../Models/Static_OptionalRule.bs.js";
import * as Static_MagicalMelody$OptolithClient from "../Models/Static_MagicalMelody.bs.js";
import * as Static_Prerequisites$OptolithClient from "../Models/Static_Prerequisites.bs.js";
import * as Static_ZibiljaRitual$OptolithClient from "../Models/Static_ZibiljaRitual.bs.js";
import * as Static_SpecialAbility$OptolithClient from "../Models/Static_SpecialAbility.bs.js";
import * as Static_CombatTechnique$OptolithClient from "../Models/Static_CombatTechnique.bs.js";
import * as Static_ExperienceLevel$OptolithClient from "../Models/Static_ExperienceLevel.bs.js";
import * as Static_LiturgicalChant$OptolithClient from "../Models/Static_LiturgicalChant.bs.js";
import * as Static_BlessedTradition$OptolithClient from "../Models/Static_BlessedTradition.bs.js";
import * as Static_DominationRitual$OptolithClient from "../Models/Static_DominationRitual.bs.js";
import * as Static_ElvenMagicalSong$OptolithClient from "../Models/Static_ElvenMagicalSong.bs.js";
import * as Static_EquipmentPackage$OptolithClient from "../Models/Static_EquipmentPackage.bs.js";
import * as Static_MagicalTradition$OptolithClient from "../Models/Static_MagicalTradition.bs.js";
import * as Static_DerivedCharacteristic$OptolithClient from "../Models/Static_DerivedCharacteristic.bs.js";

function idName(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function liturgicalChantEnhancements(xs) {
  return Curry._1(Ley_IntMap$OptolithClient.fromList, Ley_List$OptolithClient.Monad.$great$great$eq(xs, (function (x) {
                    var match = x.level3.requirePrevious;
                    return /* :: */[
                            /* tuple */[
                              x.level1.id,
                              {
                                id: /* `Generic */[
                                  61643255,
                                  x.level1.id
                                ],
                                name: x.level1.name,
                                cost: x.level1.cost,
                                prerequisites: Static_Prerequisites$OptolithClient.empty,
                                description: x.level1.effect,
                                isSecret: undefined,
                                languages: undefined,
                                continent: undefined,
                                isExtinct: undefined,
                                specializations: undefined,
                                specializationInput: undefined,
                                animalGr: undefined,
                                animalLevel: undefined,
                                target: x.target,
                                wikiEntry: undefined,
                                src: x.src,
                                errata: x.errata
                              }
                            ],
                            /* :: */[
                              /* tuple */[
                                x.level2.id,
                                {
                                  id: /* `Generic */[
                                    61643255,
                                    x.level2.id
                                  ],
                                  name: x.level2.name,
                                  cost: x.level2.cost,
                                  prerequisites: {
                                    sex: Static_Prerequisites$OptolithClient.empty.sex,
                                    race: Static_Prerequisites$OptolithClient.empty.race,
                                    culture: Static_Prerequisites$OptolithClient.empty.culture,
                                    pact: Static_Prerequisites$OptolithClient.empty.pact,
                                    social: Static_Prerequisites$OptolithClient.empty.social,
                                    primaryAttribute: Static_Prerequisites$OptolithClient.empty.primaryAttribute,
                                    activatable: x.level2.requireLevel1 ? /* :: */[
                                        {
                                          id: /* `SpecialAbility */[
                                            -789492591,
                                            Ids$OptolithClient.SpecialAbilityId.chantEnhancement
                                          ],
                                          active: true,
                                          sid: /* `Generic */[
                                            61643255,
                                            x.level1.id
                                          ],
                                          sid2: undefined,
                                          level: undefined
                                        },
                                        /* [] */0
                                      ] : /* [] */0,
                                    activatableMultiEntry: Static_Prerequisites$OptolithClient.empty.activatableMultiEntry,
                                    activatableMultiSelect: Static_Prerequisites$OptolithClient.empty.activatableMultiSelect,
                                    increasable: Static_Prerequisites$OptolithClient.empty.increasable,
                                    increasableMultiEntry: Static_Prerequisites$OptolithClient.empty.increasableMultiEntry
                                  },
                                  description: x.level2.effect,
                                  isSecret: undefined,
                                  languages: undefined,
                                  continent: undefined,
                                  isExtinct: undefined,
                                  specializations: undefined,
                                  specializationInput: undefined,
                                  animalGr: undefined,
                                  animalLevel: undefined,
                                  target: x.target,
                                  wikiEntry: undefined,
                                  src: x.src,
                                  errata: x.errata
                                }
                              ],
                              /* :: */[
                                /* tuple */[
                                  x.level3.id,
                                  {
                                    id: /* `Generic */[
                                      61643255,
                                      x.level3.id
                                    ],
                                    name: x.level3.name,
                                    cost: x.level3.cost,
                                    prerequisites: {
                                      sex: Static_Prerequisites$OptolithClient.empty.sex,
                                      race: Static_Prerequisites$OptolithClient.empty.race,
                                      culture: Static_Prerequisites$OptolithClient.empty.culture,
                                      pact: Static_Prerequisites$OptolithClient.empty.pact,
                                      social: Static_Prerequisites$OptolithClient.empty.social,
                                      primaryAttribute: Static_Prerequisites$OptolithClient.empty.primaryAttribute,
                                      activatable: match !== undefined ? (
                                          match ? /* :: */[
                                              {
                                                id: /* `SpecialAbility */[
                                                  -789492591,
                                                  Ids$OptolithClient.SpecialAbilityId.chantEnhancement
                                                ],
                                                active: true,
                                                sid: /* `Generic */[
                                                  61643255,
                                                  x.level2.id
                                                ],
                                                sid2: undefined,
                                                level: undefined
                                              },
                                              /* [] */0
                                            ] : /* :: */[
                                              {
                                                id: /* `SpecialAbility */[
                                                  -789492591,
                                                  Ids$OptolithClient.SpecialAbilityId.chantEnhancement
                                                ],
                                                active: true,
                                                sid: /* `Generic */[
                                                  61643255,
                                                  x.level1.id
                                                ],
                                                sid2: undefined,
                                                level: undefined
                                              },
                                              /* [] */0
                                            ]
                                        ) : /* [] */0,
                                      activatableMultiEntry: Static_Prerequisites$OptolithClient.empty.activatableMultiEntry,
                                      activatableMultiSelect: Static_Prerequisites$OptolithClient.empty.activatableMultiSelect,
                                      increasable: Static_Prerequisites$OptolithClient.empty.increasable,
                                      increasableMultiEntry: Static_Prerequisites$OptolithClient.empty.increasableMultiEntry
                                    },
                                    description: x.level3.effect,
                                    isSecret: undefined,
                                    languages: undefined,
                                    continent: undefined,
                                    isExtinct: undefined,
                                    specializations: undefined,
                                    specializationInput: undefined,
                                    animalGr: undefined,
                                    animalLevel: undefined,
                                    target: x.target,
                                    wikiEntry: undefined,
                                    src: x.src,
                                    errata: x.errata
                                  }
                                ],
                                /* [] */0
                              ]
                            ]
                          ];
                  })));
}

function spellEnhancements(xs) {
  return Curry._1(Ley_IntMap$OptolithClient.fromList, Ley_List$OptolithClient.Monad.$great$great$eq(xs, (function (x) {
                    var match = x.level3.requirePrevious;
                    return /* :: */[
                            /* tuple */[
                              x.level1.id,
                              {
                                id: /* `Generic */[
                                  61643255,
                                  x.level1.id
                                ],
                                name: x.level1.name,
                                cost: x.level1.cost,
                                prerequisites: Static_Prerequisites$OptolithClient.empty,
                                description: x.level1.effect,
                                isSecret: undefined,
                                languages: undefined,
                                continent: undefined,
                                isExtinct: undefined,
                                specializations: undefined,
                                specializationInput: undefined,
                                animalGr: undefined,
                                animalLevel: undefined,
                                target: x.target,
                                wikiEntry: undefined,
                                src: x.src,
                                errata: x.errata
                              }
                            ],
                            /* :: */[
                              /* tuple */[
                                x.level2.id,
                                {
                                  id: /* `Generic */[
                                    61643255,
                                    x.level2.id
                                  ],
                                  name: x.level2.name,
                                  cost: x.level2.cost,
                                  prerequisites: {
                                    sex: Static_Prerequisites$OptolithClient.empty.sex,
                                    race: Static_Prerequisites$OptolithClient.empty.race,
                                    culture: Static_Prerequisites$OptolithClient.empty.culture,
                                    pact: Static_Prerequisites$OptolithClient.empty.pact,
                                    social: Static_Prerequisites$OptolithClient.empty.social,
                                    primaryAttribute: Static_Prerequisites$OptolithClient.empty.primaryAttribute,
                                    activatable: x.level2.requireLevel1 ? /* :: */[
                                        {
                                          id: /* `SpecialAbility */[
                                            -789492591,
                                            Ids$OptolithClient.SpecialAbilityId.spellEnhancement
                                          ],
                                          active: true,
                                          sid: /* `Generic */[
                                            61643255,
                                            x.level1.id
                                          ],
                                          sid2: undefined,
                                          level: undefined
                                        },
                                        /* [] */0
                                      ] : /* [] */0,
                                    activatableMultiEntry: Static_Prerequisites$OptolithClient.empty.activatableMultiEntry,
                                    activatableMultiSelect: Static_Prerequisites$OptolithClient.empty.activatableMultiSelect,
                                    increasable: Static_Prerequisites$OptolithClient.empty.increasable,
                                    increasableMultiEntry: Static_Prerequisites$OptolithClient.empty.increasableMultiEntry
                                  },
                                  description: x.level2.effect,
                                  isSecret: undefined,
                                  languages: undefined,
                                  continent: undefined,
                                  isExtinct: undefined,
                                  specializations: undefined,
                                  specializationInput: undefined,
                                  animalGr: undefined,
                                  animalLevel: undefined,
                                  target: x.target,
                                  wikiEntry: undefined,
                                  src: x.src,
                                  errata: x.errata
                                }
                              ],
                              /* :: */[
                                /* tuple */[
                                  x.level3.id,
                                  {
                                    id: /* `Generic */[
                                      61643255,
                                      x.level3.id
                                    ],
                                    name: x.level3.name,
                                    cost: x.level3.cost,
                                    prerequisites: {
                                      sex: Static_Prerequisites$OptolithClient.empty.sex,
                                      race: Static_Prerequisites$OptolithClient.empty.race,
                                      culture: Static_Prerequisites$OptolithClient.empty.culture,
                                      pact: Static_Prerequisites$OptolithClient.empty.pact,
                                      social: Static_Prerequisites$OptolithClient.empty.social,
                                      primaryAttribute: Static_Prerequisites$OptolithClient.empty.primaryAttribute,
                                      activatable: match !== undefined ? (
                                          match ? /* :: */[
                                              {
                                                id: /* `SpecialAbility */[
                                                  -789492591,
                                                  Ids$OptolithClient.SpecialAbilityId.spellEnhancement
                                                ],
                                                active: true,
                                                sid: /* `Generic */[
                                                  61643255,
                                                  x.level2.id
                                                ],
                                                sid2: undefined,
                                                level: undefined
                                              },
                                              /* [] */0
                                            ] : /* :: */[
                                              {
                                                id: /* `SpecialAbility */[
                                                  -789492591,
                                                  Ids$OptolithClient.SpecialAbilityId.spellEnhancement
                                                ],
                                                active: true,
                                                sid: /* `Generic */[
                                                  61643255,
                                                  x.level1.id
                                                ],
                                                sid2: undefined,
                                                level: undefined
                                              },
                                              /* [] */0
                                            ]
                                        ) : /* [] */0,
                                      activatableMultiEntry: Static_Prerequisites$OptolithClient.empty.activatableMultiEntry,
                                      activatableMultiSelect: Static_Prerequisites$OptolithClient.empty.activatableMultiSelect,
                                      increasable: Static_Prerequisites$OptolithClient.empty.increasable,
                                      increasableMultiEntry: Static_Prerequisites$OptolithClient.empty.increasableMultiEntry
                                    },
                                    description: x.level3.effect,
                                    isSecret: undefined,
                                    languages: undefined,
                                    continent: undefined,
                                    isExtinct: undefined,
                                    specializations: undefined,
                                    specializationInput: undefined,
                                    animalGr: undefined,
                                    animalLevel: undefined,
                                    target: x.target,
                                    wikiEntry: undefined,
                                    src: x.src,
                                    errata: x.errata
                                  }
                                ],
                                /* [] */0
                              ]
                            ]
                          ];
                  })));
}

function decode(locale, yamlData) {
  var animistForces = Static_AnimistForce$OptolithClient.Decode.all(yamlData);
  var arcaneBardTraditions = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.arcaneBardTraditionsL10n));
  var arcaneDancerTraditions = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.arcaneDancerTraditionsL10n));
  var armorTypes = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.armorTypesL10n));
  var aspects = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.aspectsL10n));
  var attributes = Static_Attribute$OptolithClient.Decode.all(yamlData);
  var blessedTraditions = Static_BlessedTradition$OptolithClient.Decode.all(yamlData);
  var blessings = Static_Blessing$OptolithClient.Decode.all(yamlData);
  var brews = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.brewsL10n));
  var cantrips = Static_Cantrip$OptolithClient.Decode.all(yamlData);
  var combatSpecialAbilityGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.combatSpecialAbilityGroupsL10n));
  var combatTechniqueGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.combatTechniqueGroupsL10n));
  var combatTechniques = Static_CombatTechnique$OptolithClient.Decode.all(yamlData);
  var conditions = Static_Condition$OptolithClient.Decode.all(yamlData);
  var cultures = Static_Culture$OptolithClient.Decode.all(yamlData);
  var curses = Static_Curse$OptolithClient.Decode.all(yamlData);
  var derivedCharacteristics = Static_DerivedCharacteristic$OptolithClient.Decode.all(yamlData);
  var dominationRituals = Static_DominationRitual$OptolithClient.Decode.all(yamlData);
  var elvenMagicalSongs = Static_ElvenMagicalSong$OptolithClient.Decode.all(yamlData);
  var items = Static_Item$OptolithClient.Decode.all(yamlData);
  var equipmentGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.equipmentGroupsL10n));
  var equipmentPackages = Static_EquipmentPackage$OptolithClient.Decode.all(yamlData);
  var experienceLevels = Static_ExperienceLevel$OptolithClient.Decode.all(yamlData);
  var eyeColors = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.eyeColorsL10n));
  var focusRules = Static_FocusRule$OptolithClient.Decode.all(yamlData);
  var geodeRituals = Static_GeodeRitual$OptolithClient.Decode.all(yamlData);
  var hairColors = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.hairColorsL10n));
  var liturgicalChantEnhancements$1 = liturgicalChantEnhancements(Static_LiturgicalChant$OptolithClient.Decode.enhancements(yamlData));
  var liturgicalChantGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.liturgicalChantGroupsL10n));
  var liturgicalChants = Static_LiturgicalChant$OptolithClient.Decode.all(yamlData);
  var magicalDances = Static_MagicalDance$OptolithClient.Decode.all(yamlData);
  var magicalMelodies = Static_MagicalMelody$OptolithClient.Decode.all(yamlData);
  var magicalTraditions = Static_MagicalTradition$OptolithClient.Decode.all(yamlData);
  var messages = Static_Messages$OptolithClient.Decode.t(locale, yamlData.uiL10n);
  var optionalRules = Static_OptionalRule$OptolithClient.Decode.all(yamlData);
  var pacts = Static_Pact$OptolithClient.Decode.all(yamlData);
  var professions = Static_Profession$OptolithClient.Decode.all(yamlData);
  var properties = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.propertiesL10n));
  var publications = Static_Publication$OptolithClient.Decode.all(yamlData);
  var races = Static_Race$OptolithClient.Decode.all(yamlData);
  var reaches = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.reachesL10n));
  var rogueSpells = Static_RogueSpell$OptolithClient.Decode.all(yamlData);
  var skillGroups = Static_Skill$OptolithClient.Decode.groups(yamlData);
  var skills = Static_Skill$OptolithClient.Decode.all(yamlData);
  var socialStatuses = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.socialStatusesL10n));
  var specialAbilityGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.specialAbilityGroupsL10n));
  var spellEnhancements$1 = spellEnhancements(Static_Spell$OptolithClient.Decode.enhancements(yamlData));
  var spellGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.spellGroupsL10n));
  var spells = Static_Spell$OptolithClient.Decode.all(yamlData);
  var states = Static_State$OptolithClient.Decode.all(yamlData);
  var subjects = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.subjectsL10n));
  var tribes = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.tribesL10n));
  var zibiljaRituals = Static_ZibiljaRitual$OptolithClient.Decode.all(yamlData);
  var advantages = Static_Advantage$OptolithClient.Decode.all(blessings, cantrips, combatTechniques, liturgicalChants, skills, spells, yamlData);
  var disadvantages = Static_Disadvantage$OptolithClient.Decode.all(blessings, cantrips, combatTechniques, liturgicalChants, skills, spells, yamlData);
  var specialAbilities = Static_SpecialAbility$OptolithClient.Decode.all(blessings, cantrips, combatTechniques, liturgicalChants, skills, spells, yamlData);
  return {
          advantages: advantages,
          animistForces: animistForces,
          arcaneBardTraditions: arcaneBardTraditions,
          arcaneDancerTraditions: arcaneDancerTraditions,
          armorTypes: armorTypes,
          aspects: aspects,
          attributes: attributes,
          blessedTraditions: blessedTraditions,
          blessings: blessings,
          brews: brews,
          cantrips: cantrips,
          combatSpecialAbilityGroups: combatSpecialAbilityGroups,
          combatTechniqueGroups: combatTechniqueGroups,
          combatTechniques: combatTechniques,
          conditions: conditions,
          cultures: cultures,
          curses: curses,
          derivedCharacteristics: derivedCharacteristics,
          disadvantages: disadvantages,
          dominationRituals: dominationRituals,
          elvenMagicalSongs: elvenMagicalSongs,
          items: items,
          equipmentGroups: equipmentGroups,
          equipmentPackages: equipmentPackages,
          experienceLevels: experienceLevels,
          eyeColors: eyeColors,
          focusRules: focusRules,
          geodeRituals: geodeRituals,
          hairColors: hairColors,
          liturgicalChantEnhancements: liturgicalChantEnhancements$1,
          liturgicalChantGroups: liturgicalChantGroups,
          liturgicalChants: liturgicalChants,
          magicalDances: magicalDances,
          magicalMelodies: magicalMelodies,
          magicalTraditions: magicalTraditions,
          messages: messages,
          optionalRules: optionalRules,
          pacts: pacts,
          professions: professions,
          properties: properties,
          publications: publications,
          races: races,
          reaches: reaches,
          rogueSpells: rogueSpells,
          skillGroups: skillGroups,
          skills: skills,
          socialStatuses: socialStatuses,
          specialAbilities: specialAbilities,
          specialAbilityGroups: specialAbilityGroups,
          spellEnhancements: spellEnhancements$1,
          spellGroups: spellGroups,
          spells: spells,
          states: states,
          subjects: subjects,
          tribes: tribes,
          zibiljaRituals: zibiljaRituals
        };
}

export {
  decode ,
  
}
/* Ley_IntMap-OptolithClient Not a pure module */
