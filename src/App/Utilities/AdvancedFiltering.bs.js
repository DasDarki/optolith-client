// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Intl$OptolithClient from "./Intl.bs.js";
import * as Ley_List$OptolithClient from "../../Data/Ley_List.bs.js";
import * as Ley_Function$OptolithClient from "../../Data/Ley_Function.bs.js";

function searchByMulti(searchAccessors, filterText, xs) {
  if (searchAccessors) {
    return Ley_List$OptolithClient.filter((function (x) {
                  return Ley_List$OptolithClient.Foldable.any((function (pred) {
                                if (pred.tag) {
                                  return Ley_List$OptolithClient.Foldable.any((function (x$prime) {
                                                return Ley_List$OptolithClient.isInfixOf(Ley_List$OptolithClient.Extra.lower(filterText), Ley_List$OptolithClient.Extra.lower(x$prime));
                                              }), Curry._1(pred[0], x));
                                } else {
                                  return Ley_List$OptolithClient.isInfixOf(Ley_List$OptolithClient.Extra.lower(filterText), Ley_List$OptolithClient.Extra.lower(Curry._1(pred[0], x)));
                                }
                              }), searchAccessors);
                }), xs);
  } else {
    return xs;
  }
}

function sortByMulti(sortOptions, xs) {
  if (Ley_List$OptolithClient.Foldable.length(xs) < 2 || Ley_List$OptolithClient.Foldable.$$null(sortOptions)) {
    return xs;
  }
  var sortFunctions = Ley_List$OptolithClient.map((function (x) {
          if (!x.reverse) {
            return x.compare;
          }
          var partial_arg = x.compare;
          return (function (param, param$1) {
              return Ley_Function$OptolithClient.flip(partial_arg, param, param$1);
            });
        }), sortOptions);
  return Ley_List$OptolithClient.sortBy((function (param, param$1) {
                  var _sortFunctions = sortFunctions;
                  while(true) {
                    var sortFunctions$1 = _sortFunctions;
                    if (!sortFunctions$1) {
                      return /* EQ */1;
                    }
                    var match = Curry._2(sortFunctions$1[0], param, param$1);
                    if (match !== 1) {
                      return match;
                    }
                    _sortFunctions = sortFunctions$1[1];
                    continue ;
                  };
                }))(xs);
}

function sortStrings(staticData, xs) {
  var partial_arg = Intl$OptolithClient.Collator.createWithOptions(staticData.messages.id, {
        numeric: true
      });
  return Ley_List$OptolithClient.sortBy((function (param, param$1) {
                  return Intl$OptolithClient.Collator.compare(partial_arg, param, param$1);
                }))(xs);
}

function searchAndSortByMulti(searchAccessors, sortOptions, filterText, xs) {
  return sortByMulti(sortOptions, searchByMulti(searchAccessors, filterText, xs));
}

export {
  searchByMulti ,
  sortByMulti ,
  sortStrings ,
  searchAndSortByMulti ,
  
}
/* No side effect */
