// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Json_decode from "@glennsl/bs-json/src/Json_decode.bs.js";

function maybe(decode, json) {
  if (json === undefined || json === null) {
    return ;
  } else {
    return Caml_option.some(Curry._1(decode, json));
  }
}

function optionalField(key, decode, json) {
  return Json_decode.field(key, (function (param) {
                return maybe(decode, param);
              }), json);
}

function $$const(x, json) {
  if (Caml_obj.caml_equal(json, x)) {
    return x;
  }
  throw {
        RE_EXN_ID: Json_decode.DecodeError,
        _1: "Expected \"" + (JSON.stringify(json) + ("\", but received: " + JSON.stringify(json))),
        Error: new Error()
      };
}

var idTagName = "tag";

export {
  idTagName ,
  maybe ,
  optionalField ,
  $$const ,
  
}
/* No side effect */
