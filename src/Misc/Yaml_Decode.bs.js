// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Json_decode from "@glennsl/bs-json/src/Json_decode.bs.js";
import * as Item$OptolithClient from "../Equipment/Item.bs.js";
import * as Pact$OptolithClient from "./Pact.bs.js";
import * as Race$OptolithClient from "../RaceCultureProfession/Race.bs.js";
import * as Curse$OptolithClient from "../Increasable/Curse.bs.js";
import * as Skill$OptolithClient from "../Increasable/Skill.bs.js";
import * as Spell$OptolithClient from "../Increasable/Spell.bs.js";
import * as State$OptolithClient from "./State.bs.js";
import * as Cantrip$OptolithClient from "../Activatable/Cantrip.bs.js";
import * as Culture$OptolithClient from "../RaceCultureProfession/Culture.bs.js";
import * as Blessing$OptolithClient from "../Activatable/Blessing.bs.js";
import * as Messages$OptolithClient from "./Messages.bs.js";
import * as Advantage$OptolithClient from "../Activatable/Advantage.bs.js";
import * as Attribute$OptolithClient from "../Increasable/Attribute.bs.js";
import * as Condition$OptolithClient from "./Condition.bs.js";
import * as FocusRule$OptolithClient from "../Rules/FocusRule.bs.js";
import * as Ley_IntMap$OptolithClient from "../Data/Ley_IntMap.bs.js";
import * as Profession$OptolithClient from "../RaceCultureProfession/Profession.bs.js";
import * as RogueSpell$OptolithClient from "../Increasable/RogueSpell.bs.js";
import * as GeodeRitual$OptolithClient from "../Increasable/GeodeRitual.bs.js";
import * as Publication$OptolithClient from "../Sources/Publication.bs.js";
import * as AnimistForce$OptolithClient from "../Increasable/AnimistForce.bs.js";
import * as Disadvantage$OptolithClient from "../Activatable/Disadvantage.bs.js";
import * as MagicalDance$OptolithClient from "../Increasable/MagicalDance.bs.js";
import * as OptionalRule$OptolithClient from "../Rules/OptionalRule.bs.js";
import * as MagicalMelody$OptolithClient from "../Increasable/MagicalMelody.bs.js";
import * as ZibiljaRitual$OptolithClient from "../Increasable/ZibiljaRitual.bs.js";
import * as SpecialAbility$OptolithClient from "../Activatable/SpecialAbility.bs.js";
import * as CombatTechnique$OptolithClient from "../Increasable/CombatTechnique.bs.js";
import * as ExperienceLevel$OptolithClient from "./ExperienceLevel.bs.js";
import * as LiturgicalChant$OptolithClient from "../Increasable/LiturgicalChant.bs.js";
import * as BlessedTradition$OptolithClient from "../Activatable/BlessedTradition.bs.js";
import * as DominationRitual$OptolithClient from "../Increasable/DominationRitual.bs.js";
import * as ElvenMagicalSong$OptolithClient from "../Increasable/ElvenMagicalSong.bs.js";
import * as EquipmentPackage$OptolithClient from "../Equipment/EquipmentPackage.bs.js";
import * as MagicalTradition$OptolithClient from "../Activatable/MagicalTradition.bs.js";
import * as SpellEnhancements$OptolithClient from "../Increasable/SpellEnhancements.bs.js";
import * as DerivedCharacteristic$OptolithClient from "./DerivedCharacteristic.bs.js";
import * as LiturgicalChantEnhancements$OptolithClient from "../Increasable/LiturgicalChantEnhancements.bs.js";

function idName(json) {
  return [
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function decode(locale, yamlData) {
  var animistForces = AnimistForce$OptolithClient.Decode.all(yamlData);
  var arcaneBardTraditions = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.arcaneBardTraditionsL10n));
  var arcaneDancerTraditions = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.arcaneDancerTraditionsL10n));
  var armorTypes = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.armorTypesL10n));
  var aspects = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.aspectsL10n));
  var attributes = Attribute$OptolithClient.Decode.all(yamlData);
  var blessedTraditions = BlessedTradition$OptolithClient.Decode.all(yamlData);
  var blessings = Blessing$OptolithClient.Decode.all(yamlData);
  var brews = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.brewsL10n));
  var cantrips = Cantrip$OptolithClient.Decode.all(yamlData);
  var combatSpecialAbilityGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.combatSpecialAbilityGroupsL10n));
  var combatTechniqueGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.combatTechniqueGroupsL10n));
  var combatTechniques = CombatTechnique$OptolithClient.Decode.all(yamlData);
  var conditions = Condition$OptolithClient.Decode.all(yamlData);
  var cultures = Culture$OptolithClient.Decode.all(yamlData);
  var curses = Curse$OptolithClient.Decode.all(yamlData);
  var derivedCharacteristics = DerivedCharacteristic$OptolithClient.Decode.all(yamlData);
  var dominationRituals = DominationRitual$OptolithClient.Decode.all(yamlData);
  var elvenMagicalSongs = ElvenMagicalSong$OptolithClient.Decode.all(yamlData);
  var items = Item$OptolithClient.Decode.all(yamlData);
  var equipmentGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.equipmentGroupsL10n));
  var equipmentPackages = EquipmentPackage$OptolithClient.Decode.all(yamlData);
  var experienceLevels = ExperienceLevel$OptolithClient.Decode.all(yamlData);
  var eyeColors = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.eyeColorsL10n));
  var focusRules = FocusRule$OptolithClient.Decode.all(yamlData);
  var geodeRituals = GeodeRitual$OptolithClient.Decode.all(yamlData);
  var hairColors = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.hairColorsL10n));
  var liturgicalChantGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.liturgicalChantGroupsL10n));
  var liturgicalChants = LiturgicalChant$OptolithClient.Decode.all(yamlData);
  var liturgicalChantEnhancements = LiturgicalChantEnhancements$OptolithClient.Decode.liturgicalChantEnhancements(liturgicalChants, LiturgicalChant$OptolithClient.Decode.enhancements(yamlData));
  var magicalDances = MagicalDance$OptolithClient.Decode.all(yamlData);
  var magicalMelodies = MagicalMelody$OptolithClient.Decode.all(yamlData);
  var magicalTraditions = MagicalTradition$OptolithClient.Decode.all(yamlData);
  var messages = Messages$OptolithClient.Decode.t(locale, yamlData.uiL10n);
  var optionalRules = OptionalRule$OptolithClient.Decode.all(yamlData);
  var pacts = Pact$OptolithClient.Decode.all(yamlData);
  var professions = Profession$OptolithClient.Decode.all(yamlData);
  var properties = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.propertiesL10n));
  var publications = Publication$OptolithClient.Decode.all(yamlData);
  var races = Race$OptolithClient.Decode.all(yamlData);
  var reaches = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.reachesL10n));
  var rogueSpells = RogueSpell$OptolithClient.Decode.all(yamlData);
  var skillGroups = Skill$OptolithClient.Decode.groups(yamlData);
  var skills = Skill$OptolithClient.Decode.all(yamlData);
  var socialStatuses = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.socialStatusesL10n));
  var specialAbilityGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.specialAbilityGroupsL10n));
  var spellGroups = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.spellGroupsL10n));
  var spells = Spell$OptolithClient.Decode.all(yamlData);
  var spellEnhancements = SpellEnhancements$OptolithClient.Decode.spellEnhancements(spells, Spell$OptolithClient.Decode.enhancements(yamlData));
  var states = State$OptolithClient.Decode.all(yamlData);
  var subjects = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.subjectsL10n));
  var tribes = Curry._1(Ley_IntMap$OptolithClient.fromList, Json_decode.list(idName, yamlData.tribesL10n));
  var zibiljaRituals = ZibiljaRitual$OptolithClient.Decode.all(yamlData);
  var advantages = Advantage$OptolithClient.Decode.all(blessings, cantrips, combatTechniques, liturgicalChants, skills, spells, yamlData);
  var disadvantages = Disadvantage$OptolithClient.Decode.all(blessings, cantrips, combatTechniques, liturgicalChants, skills, spells, yamlData);
  var specialAbilities = SpecialAbility$OptolithClient.Decode.all(blessings, cantrips, combatTechniques, liturgicalChants, skills, spells, yamlData);
  var modifiedSpecialAbilities = SpecialAbility$OptolithClient.Decode.modifyParsed(specialAbilities);
  return {
          advantages: advantages,
          animistForces: animistForces,
          arcaneBardTraditions: arcaneBardTraditions,
          arcaneDancerTraditions: arcaneDancerTraditions,
          armorTypes: armorTypes,
          aspects: aspects,
          attributes: attributes,
          blessedTraditions: blessedTraditions,
          blessings: blessings,
          brews: brews,
          cantrips: cantrips,
          combatSpecialAbilityGroups: combatSpecialAbilityGroups,
          combatTechniqueGroups: combatTechniqueGroups,
          combatTechniques: combatTechniques,
          conditions: conditions,
          cultures: cultures,
          curses: curses,
          derivedCharacteristics: derivedCharacteristics,
          disadvantages: disadvantages,
          dominationRituals: dominationRituals,
          elvenMagicalSongs: elvenMagicalSongs,
          items: items,
          equipmentGroups: equipmentGroups,
          equipmentPackages: equipmentPackages,
          experienceLevels: experienceLevels,
          eyeColors: eyeColors,
          focusRules: focusRules,
          geodeRituals: geodeRituals,
          hairColors: hairColors,
          liturgicalChantEnhancements: liturgicalChantEnhancements,
          liturgicalChantGroups: liturgicalChantGroups,
          liturgicalChants: liturgicalChants,
          magicalDances: magicalDances,
          magicalMelodies: magicalMelodies,
          magicalTraditions: magicalTraditions,
          messages: messages,
          optionalRules: optionalRules,
          pacts: pacts,
          professions: professions,
          properties: properties,
          publications: publications,
          races: races,
          reaches: reaches,
          rogueSpells: rogueSpells,
          skillGroups: skillGroups,
          skills: skills,
          socialStatuses: socialStatuses,
          specialAbilities: modifiedSpecialAbilities,
          specialAbilityGroups: specialAbilityGroups,
          spellEnhancements: spellEnhancements,
          spellGroups: spellGroups,
          spells: spells,
          states: states,
          subjects: subjects,
          tribes: tribes,
          zibiljaRituals: zibiljaRituals
        };
}

export {
  decode ,
  
}
/* Item-OptolithClient Not a pure module */
