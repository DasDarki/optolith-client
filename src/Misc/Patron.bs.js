// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as JsonStrict$OptolithClient from "./JsonStrict.bs.js";
import * as Ley_IntSet$OptolithClient from "../Data/Ley_IntSet.bs.js";
import * as Ley_Option$OptolithClient from "../Data/Ley_Option.bs.js";
import * as TranslationMap$OptolithClient from "./TranslationMap.bs.js";

function decode(json) {
  return {
          name: JsonStrict$OptolithClient.field("name", JsonStrict$OptolithClient.string, json)
        };
}

var Translations = {
  decode: decode
};

TranslationMap$OptolithClient.Make(Translations);

function decode$1(json) {
  return {
          name: JsonStrict$OptolithClient.field("name", JsonStrict$OptolithClient.string, json)
        };
}

var Translations$1 = {
  decode: decode$1
};

var TranslationMap = TranslationMap$OptolithClient.Make(Translations$1);

function decodeMultilingual(json) {
  return {
          id: JsonStrict$OptolithClient.field("id", JsonStrict$OptolithClient.$$int, json),
          category: JsonStrict$OptolithClient.field("category", JsonStrict$OptolithClient.$$int, json),
          skills: JsonStrict$OptolithClient.field("skills", (function (param) {
                  return JsonStrict$OptolithClient.tuple3(JsonStrict$OptolithClient.$$int, JsonStrict$OptolithClient.$$int, JsonStrict$OptolithClient.$$int, param);
                }), json),
          limitedToCultures: Curry._1(Ley_IntSet$OptolithClient.fromList, JsonStrict$OptolithClient.field("limitedToCultures", (function (param) {
                      return JsonStrict$OptolithClient.list(JsonStrict$OptolithClient.$$int, param);
                    }), json)),
          isLimitedToCulturesReverse: JsonStrict$OptolithClient.field("isLimitedToCulturesReverse", JsonStrict$OptolithClient.bool, json),
          translations: JsonStrict$OptolithClient.field("translations", TranslationMap.decode, json)
        };
}

function decode$2(langs, json) {
  var x = decodeMultilingual(json);
  return Curry._2(Ley_Option$OptolithClient.Infix.$less$amp$great, Curry._2(TranslationMap.getFromLanguageOrder, langs, x.translations), (function (translation) {
                return [
                        x.id,
                        {
                          id: x.id,
                          name: translation.name,
                          category: x.category,
                          skills: x.skills,
                          limitedToCultures: x.limitedToCultures,
                          isLimitedToCulturesReverse: x.isLimitedToCulturesReverse
                        }
                      ];
              }));
}

var Category = {};

export {
  Category ,
  decode$2 as decode,
  
}
/*  Not a pure module */
