open IO.Infix;

module Parser = {
  [@bs.module "yaml"] external parse: string => Js.Json.t = "parse";
};

type t = {
  advantages: list(Js.Json.t),
  animalShapes: list(Js.Json.t),
  animalShapePaths: list(Js.Json.t),
  animalShapeSizes: list(Js.Json.t),
  animistForces: list(Js.Json.t),
  arcaneBardTraditions: list(Js.Json.t),
  arcaneDancerTraditions: list(Js.Json.t),
  armorTypes: list(Js.Json.t),
  aspects: list(Js.Json.t),
  attributes: list(Js.Json.t),
  blessedTraditions: list(Js.Json.t),
  blessings: list(Js.Json.t),
  brews: list(Js.Json.t),
  cantrips: list(Js.Json.t),
  combatSpecialAbilityGroups: list(Js.Json.t),
  combatTechniqueGroups: list(Js.Json.t),
  combatTechniques: list(Js.Json.t),
  conditions: list(Js.Json.t),
  coreRules: list(Js.Json.t),
  cultures: list(Js.Json.t),
  curricula: list(Js.Json.t),
  curses: list(Js.Json.t),
  derivedCharacteristics: list(Js.Json.t),
  disadvantages: list(Js.Json.t),
  dominationRituals: list(Js.Json.t),
  elvenMagicalSongs: list(Js.Json.t),
  items: list(Js.Json.t),
  equipmentGroups: list(Js.Json.t),
  equipmentPackages: list(Js.Json.t),
  experienceLevels: list(Js.Json.t),
  eyeColors: list(Js.Json.t),
  focusRules: list(Js.Json.t),
  geodeRituals: list(Js.Json.t),
  hairColors: list(Js.Json.t),
  languages: list(Js.Json.t),
  liturgicalChantGroups: list(Js.Json.t),
  liturgicalChants: list(Js.Json.t),
  magicalDances: list(Js.Json.t),
  magicalMelodies: list(Js.Json.t),
  magicalTraditions: list(Js.Json.t),
  optionalRules: list(Js.Json.t),
  pacts: list(Js.Json.t),
  patrons: list(Js.Json.t),
  patronCategories: list(Js.Json.t),
  professions: list(Js.Json.t),
  properties: list(Js.Json.t),
  publications: list(Js.Json.t),
  races: list(Js.Json.t),
  reaches: list(Js.Json.t),
  rogueSpells: list(Js.Json.t),
  scripts: list(Js.Json.t),
  skillGroups: list(Js.Json.t),
  skills: list(Js.Json.t),
  socialStatuses: list(Js.Json.t),
  specialAbilities: list(Js.Json.t),
  specialAbilityGroups: list(Js.Json.t),
  spellGroups: list(Js.Json.t),
  spells: list(Js.Json.t),
  states: list(Js.Json.t),
  subjects: list(Js.Json.t),
  tradeSecrets: list(Js.Json.t),
  tribes: list(Js.Json.t),
  zibiljaRituals: list(Js.Json.t),
};

let dataRoot = Node.Path.join([|".", "src", "Database", "Data"|]);

let parseSupportedLanguages = () =>
  Node.Path.join([|dataRoot, "SupportedLanguages.yml"|])
  |> IO.readFile
  <&> Parser.parse;

let parseUI = locale =>
  Node.Path.join([|dataRoot, "UI", locale ++ ".yml"|])
  |> IO.readFile
  <&> Parser.parse;

let parseFilesOfEntryType = dir =>
  Node.Path.join([|dataRoot, dir|])
  |> Directory.getDirectoryContents
  |> IO.mapM(x => x |> IO.readFile <&> Parser.parse);

let parseDirectories = (~onProgress, dirs) => {
  let max = dirs |> Ley_List.length |> Js.Int.toFloat;

  dirs
  |> IO.imapM((i, dir) =>
       dir
       |> parseFilesOfEntryType
       <&> (
         res => {
           onProgress((Js.Int.toFloat(i) +. 1.) /. max);
           res;
         }
       )
     );
};

let dirs = [
  "Advantages",
  "AnimalShapes",
  "AnimalShapePaths",
  "AnimalShapeSizes",
  "AnimistForces",
  "ArcaneBardTraditions",
  "ArcaneDancerTraditions",
  "ArmorTypes",
  "Aspects",
  "Attributes",
  "BlessedTraditions",
  "Blessings",
  "Brews",
  "Cantrips",
  "CombatSpecialAbilityGroups",
  "CombatTechniqueGroups",
  "CombatTechniques",
  "Conditions",
  "CoreRules",
  "Cultures",
  "Curricula",
  "Curses",
  "DerivedCharacteristics",
  "Disadvantages",
  "DominationRituals",
  "ElvenMagicalSongs",
  "Items",
  "EquipmentGroups",
  "EquipmentPackages",
  "ExperienceLevels",
  "EyeColors",
  "FocusRules",
  "GeodeRituals",
  "HairColors",
  "Languages",
  "LiturgicalChantGroups",
  "LiturgicalChants",
  "MagicalDances",
  "MagicalMelodies",
  "MagicalTraditions",
  "OptionalRules",
  "Pacts",
  "Patrons",
  "PatronCategories",
  "Professions",
  "Properties",
  "Publications",
  "Races",
  "Reaches",
  "RogueSpells",
  "Scripts",
  "SkillGroups",
  "Skills",
  "SocialStatuses",
  "SpecialAbilities",
  "SpecialAbilityGroups",
  "SpellGroups",
  "Spells",
  "States",
  "Subjects",
  "TradeSecrets",
  "Tribes",
  "ZibiljaRituals",
];

let parseFiles = (~onProgress) =>
  dirs
  |> parseDirectories(~onProgress)
  <&> (
    fun
    | [
        advantages,
        animalShapes,
        animalShapePaths,
        animalShapeSizes,
        animistForces,
        arcaneBardTraditions,
        arcaneDancerTraditions,
        armorTypes,
        aspects,
        attributes,
        blessedTraditions,
        blessings,
        brews,
        cantrips,
        combatSpecialAbilityGroups,
        combatTechniqueGroups,
        combatTechniques,
        conditions,
        coreRules,
        cultures,
        curricula,
        curses,
        derivedCharacteristics,
        disadvantages,
        dominationRituals,
        elvenMagicalSongs,
        items,
        equipmentGroups,
        equipmentPackages,
        experienceLevels,
        eyeColors,
        focusRules,
        geodeRituals,
        hairColors,
        languages,
        liturgicalChantGroups,
        liturgicalChants,
        magicalDances,
        magicalMelodies,
        magicalTraditions,
        optionalRules,
        pacts,
        patrons,
        patronCategories,
        professions,
        properties,
        publications,
        races,
        reaches,
        rogueSpells,
        scripts,
        skillGroups,
        skills,
        socialStatuses,
        specialAbilities,
        specialAbilityGroups,
        spellGroups,
        spells,
        states,
        subjects,
        tradeSecrets,
        tribes,
        zibiljaRituals,
      ] => {
        advantages,
        animalShapes,
        animalShapePaths,
        animalShapeSizes,
        animistForces,
        arcaneBardTraditions,
        arcaneDancerTraditions,
        armorTypes,
        aspects,
        attributes,
        blessedTraditions,
        blessings,
        brews,
        cantrips,
        combatSpecialAbilityGroups,
        combatTechniqueGroups,
        combatTechniques,
        conditions,
        coreRules,
        cultures,
        curricula,
        curses,
        derivedCharacteristics,
        disadvantages,
        dominationRituals,
        elvenMagicalSongs,
        items,
        equipmentGroups,
        equipmentPackages,
        experienceLevels,
        eyeColors,
        focusRules,
        geodeRituals,
        hairColors,
        languages,
        liturgicalChantGroups,
        liturgicalChants,
        magicalDances,
        magicalMelodies,
        magicalTraditions,
        optionalRules,
        pacts,
        patrons,
        patronCategories,
        professions,
        properties,
        publications,
        races,
        reaches,
        rogueSpells,
        scripts,
        skillGroups,
        skills,
        socialStatuses,
        specialAbilities,
        specialAbilityGroups,
        spellGroups,
        spells,
        states,
        subjects,
        tradeSecrets,
        tribes,
        zibiljaRituals,
      }
    | xs =>
      failwith(
        "Unexpected length of directories: "
        ++ Ley_Int.show(Ley_List.length(xs)),
      )
  );
